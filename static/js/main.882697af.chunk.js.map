{"version":3,"sources":["Components/ContactItem/ContactItem.module.css","Components/ContactsList/ContactList.module.css","App.module.css","Components/Section/Section.module.css","Components/ContactItem/ContactItem.js","redux/contacts-actions.js","redux/contacts-selectors.js","Components/ContactsList/ContactsList.js","Components/Form/Form.js","Components/Filter/Filter.js","Components/TotalNumber/TotalNumber.js","Components/Section/Section.js","App.js","redux/contacts-reducer.js","redux/store.js","index.js","Components/Form/Form.module.css","Components/Filter/Filter.module.css"],"names":["module","exports","ContactItem","name","number","deleteContact","className","s","item","btn__list","onClick","addContact","createAction","changeFilter","getContacts","state","contacts","items","getFilter","filter","filteredContacts","normalizedContact","toLowerCase","includes","ContactsList","useSelector","dispatch","useDispatch","list","map","id","contactsActions","Form","useState","setName","setNumber","handleChange","event","target","value","resetForm","form_wrapper","title","onSubmit","preventDefault","sameName","existName","nameHandler","find","existNameHandler","contact","alert","wrap__input","caption","input","type","placeholder","required","onChange","contactBtn","Filter","filter__wrap","filtter_title","filter__caption","filter_input","connect","total","length","Section","children","section","App","app__wrap","createReducer","payload","_","combineReducers","persistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.882697af.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn__list\":\"ContactItem_btn__list__7lVoB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__31af9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app__wrap\":\"App_app__wrap__3BUU7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__snUHO\"};","import PropTypes from 'prop-types';\nimport s from './ContactItem.module.css';\n\nconst ContactItem = ({ name, number, deleteContact }) => {\n  return (\n    <li className={s.item}>\n      <p>\n        {name}: {number}\n      </p>\n      <button className={s.btn__list} onClick={deleteContact}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('contacts/add');\nexport const deleteContact = createAction('contacts/delete');\nexport const changeFilter = createAction('contacts/changeFilter');\n","export const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const filteredContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedContact = filter.toLowerCase();\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedContact),\n  );\n};\n","import PropTypes from 'prop-types';\nimport ContactItem from '../ContactItem/ContactItem';\nimport s from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as contactsActions from '../../redux/contacts-actions';\nimport { filteredContacts } from '../../redux/contacts-selectors';\n\nconst ContactsList = () => {\n  const contacts = useSelector(filteredContacts);\n  const dispatch = useDispatch();\n\n  const deleteContact = id => dispatch(contactsActions.deleteContact(id));\n\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItem\n          key={id}\n          name={name}\n          number={number}\n          deleteContact={() => deleteContact(id)}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ContactsList;\n","import React, { useState } from 'react';\nimport s from './Form.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts } from '../../redux/contacts-selectors';\nimport * as contactsActions from '../../redux/contacts-actions';\n\nexport default function Form() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const existNameHandler = existName => {\n    const nameHandler = existName.toLowerCase();\n    return contacts.find(({ name }) => name.toLowerCase() === nameHandler);\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    const sameName = existNameHandler(name);\n    const contact = { id: name, name, number };\n\n    if (sameName) {\n      alert(`${name} is already in your phonebook`);\n    } else {\n      dispatch(contactsActions.addContact(contact));\n    }\n\n    if (contact === '') {\n      return alert('Enter values');\n    }\n\n    resetForm();\n    setName('');\n    setNumber('');\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div className={s.form_wrapper}>\n      <h1 className={s.title}>Phonebook</h1>\n      <form onSubmit={handleFormSubmit}>\n        <div className={s.wrap__input}>\n          <p className={s.caption}>Number</p>\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter name\"\n            required\n            value={name}\n            onChange={handleChange}\n          />\n          <p className={s.caption}>Name</p>\n          <input\n            className={s.input}\n            type=\"tel\"\n            name={'number'}\n            placeholder=\"Enter number\"\n            value={number}\n            onChange={handleChange}\n            required\n          />\n        </div>\n\n        <button className={s.contactBtn} type=\"submit\">\n          Add Contact\n        </button>\n      </form>\n    </div>\n  );\n}\n","import s from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/contacts-selectors';\nimport * as contactsActions from '../../redux/contacts-actions';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <div className={s.filter__wrap}>\n      <h2 className={s.filtter_title}>Contacts</h2>\n      <p className={s.filter__caption}>Find contacts by name</p>\n      <input\n        className={s.filter_input}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={event =>\n          dispatch(contactsActions.changeFilter(event.target.value))\n        }\n        placeholder=\"Enter name for Search\"\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst TotalNumber = ({ total }) => {\n  return (\n    <div>\n      <p>Number of contacts: {total}</p>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  total: state.contacts.items.length,\n});\n\nexport default connect(mapStateToProps)(TotalNumber);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <div>\n        {title && <h2>{title}</h2>}\n        {children}\n      </div>\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React from 'react';\nimport ContactsList from './Components/ContactsList/ContactsList';\nimport Form from './Components/Form/Form';\nimport Filter from './Components/Filter/Filter';\nimport s from './App.module.css';\nimport TotalNumber from './Components/TotalNumber/TotalNumber';\nimport Section from './Components/Section/Section';\n\nfunction App() {\n  return (\n    <div className={s.app__wrap}>\n      <Section>\n        <Form />\n      </Section>\n      <Section>\n        <Filter />\n        <TotalNumber />\n        <ContactsList />\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { addContact, deleteContact, changeFilter } from './contacts-actions';\n\nconst items = createReducer([], {\n  [addContact]: (state, { payload }) => [payload, ...state],\n  [deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import contactsReducer from './contacts-reducer';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport logger from 'redux-logger';\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(persistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store, persistor } from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Form_title__1ii-C\",\"caption\":\"Form_caption__3h5tb\",\"contactBtn\":\"Form_contactBtn__2hADS\",\"stripes\":\"Form_stripes__1JeJK\",\"input\":\"Form_input__2o61r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__wrap\":\"Filter_filter__wrap__Jg7ya\",\"filtter_title\":\"Filter_filtter_title__3zcNV\",\"filter_input\":\"Filter_filter_input__2vnwE\",\"filter__caption\":\"Filter_filter__caption__1ABye\"};"],"sourceRoot":""}